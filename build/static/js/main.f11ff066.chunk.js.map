{"version":3,"sources":["logo.svg","components/Graficos/GraficoSecciones.js","components/Cards/CardSmall.js","components/Graficos/GraficoPrincipal.js","components/Cards/CardPrincipal.js","FireBaseInit.js","components/Covid/Covid.js","components/NavBars/NavBarItems.js","components/NavBars/NavBar.js","assets/logo.png","components/BrandHeader/Brand.js","components/BrandHeader/BrandHeader.js","App.js","reportWebVitals.js","index.js"],"names":["GraficoSecciones","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoy","ayer","antier","style","options","maintainAspectRatio","responsive","CardSmall","title","className","GraficoPrincipal","dataInfectados","dataMuertes","dataRecuperados","dataActivos","CardPrincipal","firebase","apps","length","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Covid","useState","country","setCountry","day1","setDay1","day2","setDay2","day3","setDay3","RecoveredFB","setRecoveredFB","setDateTimeFB","confirmedFB","setConfirmedFB","deathsFB","setdeathsFB","actives","setActivesFB","UpdateFirebase","database","ref","push","set","dataFireBase","on","snapshot","val","RecoveredFBA","properti","snapshots","dataa","dateTimeFBA","confirmedFBA","deathsFBA","activesFBA","console","log","allData","getData1","_date","method","url","params","date","name","headers","axios","request","then","response","catch","error","getData2","getData3","datasday","days1","datetime","confirmed","provinces","recovered","active","deaths","datasday2","days2","datasday3","days3","a","p1","Promise","resolve","setTimeout","p2","p3","all","CardsSmalld","class","CardsSmallshow","useEffect","type","onChange","event","target","value","onClick","NavBarItems","uri","to","NavBar","navBarItems","map","o","i","color","width","paddingLeft","marginRight","paddingRight","Brand","src","logo","alt","marginLeft","BrandHeader","children","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f11ff066.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n//import './template.css';\r\nimport {Bar} from 'react-chartjs-2';\r\n// para usar esta librería se de instalar con el siguiente comando en la raiz del proyecto\r\n \r\n//npm install --save react-chartjs-2 chart.js\r\n\r\nfunction GraficoSecciones ({hoy, ayer, antier}){\r\n  const data={\r\n    //cuantas secciones se usarán, cada valor en los datasets corresponde a cada sección \r\n    labels: [],\r\n    datasets:[{\r\n      //Nombre de la sección\r\n      label:'Hoy',\r\n      //estilos\r\n      backgroundColor: 'blue',\r\n      borderColor:'grey',\r\n      borderWidth:0.5,\r\n      hoverBackgroundColor:'rgba(0,0,1,0.2)',\r\n      hoverBorderColor: '#fff',\r\n      //1 valor por sección ( 'enero 2020','abril 2020','enero 2021','actual' )\r\n      data:hoy\r\n    },{\r\n      label:'Ayer',\r\n      backgroundColor: 'rgba(255,0,0,1)',\r\n      borderColor:'grey',\r\n      borderWidth:0.5,\r\n      hoverBackgroundColor:'#red',\r\n      hoverBorderColor: '#red',\r\n      data:ayer\r\n    },{\r\n      label:'Antier',\r\n      backgroundColor: 'rgba(0,255,0,1)',\r\n      borderColor:'grey',\r\n      borderWidth:0.5,\r\n      hoverBackgroundColor:'rgba(0,0,1,0.2)',\r\n      hoverBorderColor: '#fff',\r\n      data:antier\r\n    }\r\n  ]}\r\n  //opciones para el grafico de barras \r\n  const opciones={\r\n    //abarca toda el espacio necesario a lo alto\r\n    maintainAspectRatio:false,\r\n    //se convierte en un gráfico responsivo\r\n    responsive:true,    \r\n  }\r\n //sección de estilos locales\r\n  const Style={\r\n    //backgroundColor:'#454',\r\n    borderColor:'Red',\r\n  }\r\n  return (\r\n    //div con estilo local, encabezado y muestra de el gráfico de barras\r\n    <div style={Style}>\r\n      \r\n        <Bar data={data} options={opciones} ></Bar>\r\n        \r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default GraficoSecciones;\r\n","import GraficoSecciones from \"../Graficos/GraficoSecciones\";\r\n\r\nfunction CardSmall ({title, hoy, ayer, antier}) {\r\n    return (\r\n        <section className=\"flex justify-center w-11/12 h-80 my-7 md:w-11/12 Cards align-center\">\r\n            <section className=\"flex flex-col items-center justify-center w-full border-2 border-black border-solid rounded-3xl\">\r\n                <div className=\"flex items-center justify-center w-full h-full mt-5 text-white bg-gray-100\">\r\n                    <GraficoSecciones hoy={hoy} ayer={ayer} antier={antier}/>\r\n                </div>\r\n                <h2>{title}</h2>\r\n            </section>\r\n        </section>\r\n      );\r\n}\r\n\r\nexport default CardSmall;","import React from 'react';\r\n//import './template.css';\r\nimport {Bar} from 'react-chartjs-2';\r\n// para usar esta librería se de instalar con el siguiente comando en la raiz del proyecto\r\n \r\n//npm install --save react-chartjs-2 chart.js\r\n\r\nfunction GraficoPrincipal ({dataInfectados, dataMuertes, dataRecuperados, dataActivos}){\r\n  const data={\r\n    //cuantas secciones se usarán, cada valor en los datasets corresponde a cada sección \r\n    labels: [],\r\n    datasets:[{\r\n      //Nombre de la sección\r\n      label:'Infectados',\r\n      //estilos\r\n      backgroundColor: 'blue',\r\n      borderColor:'grey',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(0,0,1,0.2)',\r\n      hoverBorderColor: '#fff',\r\n      //1 valor por sección ( 'enero 2020','abril 2020','enero 2021','actual' )\r\n      data:dataInfectados\r\n    },{\r\n      label:'Muertes',\r\n      backgroundColor: 'rgba(255,0,0,1)',\r\n      borderColor:'grey',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'#red',\r\n      hoverBorderColor: '#red',\r\n      data:dataMuertes\r\n    },{\r\n      label:'Recuperados',\r\n      backgroundColor: 'rgba(0,255,0,1)',\r\n      borderColor:'grey',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(0,0,1,0.2)',\r\n      hoverBorderColor: '#fff',\r\n      data:dataRecuperados\r\n    },{\r\n      label:'Activos',\r\n      backgroundColor: 'yellow',\r\n      borderColor:'grey',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(0,0,1,0.2)',\r\n      hoverBorderColor: '#fff',\r\n      data:dataActivos\r\n    }\r\n  ]\r\n  }\r\n  //opciones para el grafico de barras \r\n  const opciones={\r\n    //abarca toda el espacio necesario a lo alto\r\n    maintainAspectRatio:false,\r\n    //se convierte en un gráfico responsivo\r\n    responsive:true,    \r\n  }\r\n //sección de estilos locales\r\n  const Style={\r\n    //backgroundColor:'#454',\r\n    borderColor:'Red',\r\n  }\r\n  return (\r\n    //div con estilo local, encabezado y muestra de el gráfico de barras\r\n    <div style={Style}>\r\n      \r\n        <Bar data={data} options={opciones} ></Bar>\r\n        \r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default GraficoPrincipal;\r\n","import GraficoPrincipal from \"../Graficos/GraficoPrincipal\";\r\n\r\nfunction CardPrincipal ({title, dataInfectados, dataMuertes, dataRecuperados, dataActivos}) {\r\n    return (\r\n        <section className=\"flex justify-center Cards align-center h-4/5\">\r\n            <section className=\"flex flex-col items-center justify-center w-11/12 border-2 border-black border-solid rounded-3xl\">\r\n                <div className=\"flex items-center justify-center w-full h-full mt-5 text-white bg-gray-200\">\r\n                    <GraficoPrincipal dataInfectados={dataInfectados} dataMuertes={dataMuertes} dataRecuperados={dataRecuperados} dataActivos={dataActivos}/>\r\n                </div>\r\n                <h2 className=\"text-lg md:text-2xl\">{title}</h2>\r\n            </section>\r\n        </section>\r\n      );\r\n}\r\n\r\nexport default CardPrincipal;","import firebase from 'firebase'\r\n// npm install --save firebase\r\n\r\nlet config = {\r\n    apiKey: process.env.REACT_APP_RAPIAPI_API_KEYF,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASEURL ,\r\n    projectId: process.env.REACT_APP_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET ,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID ,\r\n    appId: process.env.REACT_APP_APPID\r\n}\r\n\r\nif (!firebase.apps.length) firebase.initializeApp(config);\r\n\r\n//const firebase = firebase.initializeApp(config)\r\n\r\nexport default firebase","import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport CardSmall from \"../Cards/CardSmall\";\r\nimport CardPrincipal from \"./../Cards/CardPrincipal\";\r\nimport firebase from '../../FireBaseInit'\r\n\r\n\r\n\r\nconst Covid = () => {\r\n  const [country, setCountry] = useState('Mexico');\r\n  const [aux, setAux] = useState(null);\r\n  const [day1, setDay1] = useState(\"\");\r\n  const [day2, setDay2] = useState(\"\");\r\n  const [day3, setDay3] = useState(\"\");\r\n  const [RecoveredFB, setRecoveredFB] = useState(100)\r\n  const [datetimeFB, setDateTimeFB] = useState(\"2020-03-29\")\r\n  const [confirmedFB, setConfirmedFB] = useState(200)\r\n  const [deathsFB, setdeathsFB] = useState(200)\r\n  const [actives, setActivesFB] = useState(200)\r\n  /* const [showRecoveredFB, setsRecoveredFB] = useState(null)\r\n   const [showdatetimeFB, setsDateTimeFB] = useState(null)\r\n   const [showconfirmedFB, setsConfirmedFB] = useState(null)\r\n   const [showdeathsFB, setsdeathsFB] = useState(null)\r\n   const [showactives, setsActivesFB] = useState(null)\r\n */\r\n  //firebase inicio\r\n\r\n  //let Intento = Object.values(RecoveredFB);\r\n\r\n // console.log(RecoveredFB)\r\n  //console.log(datetimeFB)\r\n  //console.log(confirmedFB)\r\n  //console.log(deathsFB)\r\n\r\n  /*\r\n  setsConfirmedFB(confirmedFB)\r\n  setsRecoveredFB(RecoveredFB)\r\n  setsdeathsFB(deathsFB)\r\n  setsDateTimeFB(datetimeFB)\r\n  setsActivesFB(actives)\r\n*/\r\n\r\n  const addDateFirebase = () => {\r\n    const data = {\r\n      country: country,\r\n      data: {\r\n\r\n      },\r\n    }\r\n\r\n    firebase.database().ref('covid/' + country).set({\r\n      data\r\n    });\r\n  }\r\n\r\n\r\n  const UpdateFirebase = (data) => {\r\n\r\n\r\n\r\n    let covidAdd = firebase.database().ref('covid/' + country + '/data/data');\r\n    let NewCovidAdd = covidAdd.push('dato4');\r\n    NewCovidAdd.set({\r\n      data\r\n    });\r\n  }\r\n\r\n\r\n\r\n  //////\r\n\r\n\r\n\r\n\r\n\r\n  /////\r\n\r\n  const readDatabase = () => {\r\n    // firebase.auth().currentUser.uid\r\n    const readFirebase = firebase.database().ref('covid/' + country + '/data/data/')\r\n    readFirebase.on('value', (snapshot) => {\r\n      const data = snapshot.val();\r\n\r\n      const RecoveredFBA = []\r\n      setRecoveredFB(RecoveredFBA)\r\n      for (const properti in data) {\r\n        const readDataFirebase = firebase.database().ref('covid/' + country + '/data/data/' + properti + '/data/recovered')\r\n        readDataFirebase.on('value', (snapshots) => {\r\n          // const dataa  =snapshots.val()\r\n          const dataa = snapshots.val()\r\n          RecoveredFBA.push(dataa)\r\n          // console.log(dataa)\r\n          // setRecoveredFB(dataa)\r\n        })\r\n      }\r\n\r\n      const dateTimeFBA = []\r\n      setDateTimeFB(dateTimeFBA)\r\n      for (const properti in data) {\r\n        const readDataFirebase = firebase.database().ref('covid/' + country + '/data/data/' + properti + '/data/datetime')\r\n        readDataFirebase.on('value', (snapshots) => {\r\n          // const dataa  =snapshots.val()\r\n          const dataa = snapshots.val()\r\n          dateTimeFBA.push(dataa)\r\n          // console.log(dataa)\r\n          // setRecoveredFB(dataa)\r\n        })\r\n      }\r\n\r\n      const confirmedFBA = []\r\n      setConfirmedFB(confirmedFBA)\r\n      for (const properti in data) {\r\n        const readDataFirebase = firebase.database().ref('covid/' + country + '/data/data/' + properti + '/data/confirmed')\r\n        readDataFirebase.on('value', (snapshots) => {\r\n          // const dataa  =snapshots.val()\r\n          const dataa = snapshots.val()\r\n          confirmedFBA.push(dataa)\r\n          // console.log(dataa)\r\n          // setRecoveredFB(dataa)\r\n        })\r\n      }\r\n\r\n      const deathsFBA = []\r\n      setdeathsFB(deathsFBA)\r\n      for (const properti in data) {\r\n        const readDataFirebase = firebase.database().ref('covid/' + country + '/data/data/' + properti + '/data/deaths')\r\n        readDataFirebase.on('value', (snapshots) => {\r\n          // const dataa  =snapshots.val()\r\n          const dataa = snapshots.val()\r\n          deathsFBA.push(dataa)\r\n          // console.log(dataa)\r\n          // setRecoveredFB(dataa)\r\n        })\r\n      }\r\n      const activesFBA = []\r\n      setActivesFB(activesFBA)\r\n      for (const properti in data) {\r\n        const readDataFirebase = firebase.database().ref('covid/' + country + '/data/data/' + properti + '/data/active')\r\n        readDataFirebase.on('value', (snapshots) => {\r\n          // const dataa  =snapshots.val()\r\n          const dataa = snapshots.val()\r\n          activesFBA.push(dataa)\r\n          // console.log(dataa)\r\n          // setRecoveredFB(dataa)\r\n        })\r\n      }\r\n\r\n    })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  const dataFireBase = () => {\r\n\r\n\r\n    const readFirebase = firebase.database().ref('covid/' + country)\r\n    readFirebase.on('value', (snapshot) => {\r\n      const data = snapshot.val();\r\n\r\n      if (data) { readDatabase()\r\n      console.log(\"se consulto a firebase\") }\r\n      else { allData()\r\n        console.log(\"se consulo a la api\") }\r\n\r\n    })\r\n  }\r\n\r\n  /// firebase final\r\n\r\n\r\n\r\n  const getData1 = (_date) => {\r\n    const options = {\r\n      method: 'GET',\r\n      url: 'https://covid-19-data.p.rapidapi.com/report/country/name',\r\n      params: { date: \"2020-03-29\", name: country },\r\n      headers: {\r\n        'x-rapidapi-key': '57d8c19e8amshebeee19daa84596p188d46jsna6814a99952c',\r\n        'x-rapidapi-host': 'covid-19-data.p.rapidapi.com'\r\n      }\r\n    };\r\n\r\n    axios.request(options).then(function (response) {\r\n      //   console.log(response.data[0].provinces[0].confirmed);\r\n      //console.log(response.data);\r\n      setDay1(response.data[0]);\r\n      console.log(\"Promesa aceptada\")\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n      console.log(\"Promesa rechazada\")\r\n    });\r\n\r\n  }\r\n\r\n  const getData2 = () => {\r\n\r\n\r\n    const options = {\r\n      method: 'GET',\r\n      url: 'https://covid-19-data.p.rapidapi.com/report/country/name',\r\n      params: { date: \"2020-03-30\", name: country },\r\n      headers: {\r\n        'x-rapidapi-key': '57d8c19e8amshebeee19daa84596p188d46jsna6814a99952c',\r\n        'x-rapidapi-host': 'covid-19-data.p.rapidapi.com'\r\n      }\r\n    };\r\n\r\n    axios.request(options).then(function (response) {\r\n      //   console.log(response.data[0].provinces[0].confirmed);\r\n      //console.log(response.data);\r\n      setDay2(response.data[0]);\r\n      console.log(\"Promesa aceptada\")\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n      console.log(\"Promesa rechazada\")\r\n    });\r\n\r\n    ///\r\n\r\n\r\n  }\r\n\r\n  const getData3 = () => {\r\n    const options = {\r\n      method: 'GET',\r\n      url: 'https://covid-19-data.p.rapidapi.com/report/country/name',\r\n      params: { date: \"2020-03-31\", name: country },\r\n      headers: {\r\n        'x-rapidapi-key': '57d8c19e8amshebeee19daa84596p188d46jsna6814a99952c',\r\n        'x-rapidapi-host': 'covid-19-data.p.rapidapi.com'\r\n      }\r\n    };\r\n\r\n    axios.request(options).then(function (response) {\r\n      //console.log(response.data[0].provinces[0].confirmed);\r\n      //console.log(response.data);\r\n      setDay3(response.data[0]);\r\n      console.log(\"Promesa aceptada\")\r\n    }).catch(function (error) {\r\n      console.error(error);\r\n      console.log(\"Promesa rechazada\")\r\n    });\r\n\r\n\r\n    //\r\n\r\n  }\r\n\r\n\r\n  const datasday = (days1) => {\r\n\r\n    const data = {\r\n\r\n      datetime: days1.date,\r\n      confirmed: days1.provinces[0].confirmed,\r\n      recovered: days1.provinces[0].recovered,\r\n      active: days1.provinces[0].active,\r\n      deaths: days1.provinces[0].deaths,\r\n\r\n    }\r\n    UpdateFirebase(data)\r\n\r\n  }\r\n  const datasday2 = (days2) => {\r\n\r\n    const data = {\r\n\r\n      datetime: days2.date,\r\n      confirmed: days2.provinces[0].confirmed,\r\n      recovered: days2.provinces[0].recovered,\r\n      active: days2.provinces[0].active,\r\n      deaths: days2.provinces[0].deaths,\r\n\r\n    }\r\n    UpdateFirebase(data)\r\n\r\n  }\r\n\r\n  const datasday3 = (days3) => {\r\n    console.log(days3)\r\n    const data = {\r\n      datetime: days3.date,\r\n      confirmed: days3.provinces[0].confirmed,\r\n      recovered: days3.provinces[0].recovered,\r\n      active: days3.provinces[0].active,\r\n      deaths: days3.provinces[0].deaths,\r\n\r\n    }\r\n    UpdateFirebase(data)\r\n  }\r\n\r\n\r\n  const allData = async () => {\r\n    /*\r\n        await setTimeout(function delay() {\r\n          getData1()   \r\n    \r\n      //    datasday(day1)\r\n        },1000 )\r\n         setDay1(aux);\r\n        // setAux(null);\r\n        console.log(\"Day 1 es: \");\r\n        console.log(day1);\r\n     \r\n        \r\n        await setTimeout(function delay() {\r\n          getData2()\r\n          console.log(day2);\r\n          //datasday2(day2)\r\n        \r\n    \r\n        },2000)\r\n         setDay2(aux);\r\n        //  setAux(null);\r\n        console.log(\"Day 2 es: \");\r\n        console.log(day2);\r\n    \r\n        \r\n    \r\n    \r\n        await setTimeout(function delay() {\r\n          getData3()\r\n    \r\n       //  datasday3(day3)\r\n          console.log(\"Day 3 es: \");\r\n        console.log(day3);  \r\n        \r\n        },5000)\r\n        setDay3(aux);\r\n        //setAux(null);*/\r\n        \r\n       \r\n     let p1 = new Promise(resolve => {\r\n          setTimeout(function delay() {\r\n            getData1()\r\n            console.log(day1);\r\n            //datasday(day1) \r\n            resolve = day1\r\n          }, 1000)\r\n        })\r\n    let p2 = new Promise(resolve => {\r\n          setTimeout(function delay() {\r\n            getData2()\r\n            console.log(day2);\r\n            //datasday2(day2)\r\n            resolve=day2\r\n  \r\n  \r\n          }, 2500)\r\n        })\r\n\r\n      let p3 =  new Promise(resolve =>{\r\n          setTimeout(function delay() {\r\n            getData3()\r\n            console.log(day3);\r\n            resolve=day3 \r\n          \r\n          },4000)\r\n        });\r\n      \r\n/*\r\n        var p1 = new Promise((resolve, reject) => {\r\n          setTimeout(resolve, 1000, \"one\");\r\n        });\r\n        var p2 = new Promise((resolve, reject) => {\r\n          setTimeout(resolve, 2000, \"two\");\r\n        });\r\n        var p3 = new Promise((resolve, reject) => {\r\n          setTimeout(resolve, 3000, \"three\");\r\n        }); */       \r\n\r\n    Promise.all([ p1, p2,p3]).then(\r\n      datasday(day1),\r\n      datasday2(day2),\r\n      datasday3(day3)\r\n    );\r\n\r\n\r\n\r\n\r\n    //alert(\"Finalizada\")\r\n\r\n\r\n\r\n  }\r\n\r\n  const CardsSmalld = () => {\r\n    return (\r\n      <section class=\"grid grid-cols-1 md:grid-cols-2 align-center justify-center\">\r\n        <div class=\"flex justify-center items-center\">\r\n          <CardSmall title=\"Confirmados\" class=\"col-span-1 m-auto\" hoy={[day3.provinces[0].confirmed]} ayer={[day2.provinces[0].confirmed]} antier={[day1.provinces[0].confirmed]}></CardSmall>\r\n        </div>\r\n        <div class=\"flex justify-center items-center\">\r\n          <CardSmall title=\"Activos\" class=\"col-span-1 m-auto\" hoy={[day3.provinces[0].active]} ayer={[day2.provinces[0].active]} antier={[day1.provinces[0].active]}></CardSmall>\r\n        </div>\r\n        <div class=\"flex justify-center items-center\">\r\n          <CardSmall title=\"Recuperados\" class=\"col-span-1 m-auto\" hoy={[day3.provinces[0].recovered]} ayer={[day2.provinces[0].recovered]} antier={[day1.provinces[0].recovered]}></CardSmall>\r\n        </div>\r\n        <div class=\"flex justify-center items-center\">\r\n          <CardSmall title=\"Muertos\" class=\"col-span-1 m-auto\" hoy={[day3.provinces[0].deaths]} ayer={[day2.provinces[0].deaths]} antier={[day1.provinces[0].deaths]}></CardSmall>\r\n        </div>\r\n      </section>\r\n    )\r\n\r\n  }\r\n\r\n\r\n\r\n  const CardsSmallshow = () => {\r\n    return (\r\n      <section class=\"grid grid-cols-1 md:grid-cols-2 align-center justify-center\">\r\n        <div class=\"flex justify-center items-center\">\r\n          <CardSmall title=\"Confirmados\" class=\"col-span-1 m-auto\" hoy={[confirmedFB[2]]} ayer={[confirmedFB[1]]} antier={[confirmedFB[0]]}></CardSmall>\r\n        </div>\r\n        <div class=\"flex justify-center items-center\">\r\n          <CardSmall title=\"Activos\" class=\"col-span-1 m-auto\" hoy={[actives[2]]} ayer={[actives[1]]} antier={[actives[0]]}></CardSmall>\r\n        </div>\r\n        <div class=\"flex justify-center items-center\">\r\n          <CardSmall title=\"Recuperados\" class=\"col-span-1 m-auto\" hoy={[RecoveredFB[2]]} ayer={[RecoveredFB[1]]} antier={[RecoveredFB[0]]}></CardSmall>\r\n        </div>\r\n        <div class=\"flex justify-center items-center\">\r\n          <CardSmall title=\"Muertos\" class=\"col-span-1 m-auto\" hoy={[deathsFB[2]]} ayer={[deathsFB[1]]} antier={[deathsFB[0]]}></CardSmall>\r\n        </div>\r\n      </section>\r\n    )\r\n\r\n  }\r\n\r\n\r\n\r\n  const onChangeHandler = event => {\r\n    setCountry(event.target.value);\r\n    console.log(country);\r\n  };\r\n  /*<p>{day1.country}</p>\r\n                  <p>Casos confirmados: {day1.provinces[0].confirmed}</p>\r\n                  <p>Recuperados: {day1.provinces[0].recovered}</p>\r\n                  <p>Fallecidos: {day1.provinces[0].deaths}</p>\r\n                  <p>Activos: {day1.provinces[0].active}</p>\r\n  \r\n                  <br/>\r\n                  <p>Casos confirmados: {day2.provinces[0].confirmed}</p>\r\n                  <p>Recuperados: {day2.provinces[0].recovered}</p>\r\n                  <p>Fallecidos:{day2.provinces[0].deaths}</p>\r\n                  <p>Activos: {day2.provinces[0].active}</p>\r\n                  <br/>\r\n                  <p>Casos confirmados: {day3.provinces[0].confirmed}</p>\r\n                  <p>Recuperados: {day3.provinces[0].recovered}</p>\r\n                  <p>Fallecidos:{day3.provinces[0].deaths}</p>\r\n                  <p>Activos: {day3.provinces[0].active}</p> */\r\n\r\n  useEffect(() => {\r\n    //addDateFirebase(data)\r\n    //UpdateFirebase()\r\n    //readDatabase();\r\n    dataFireBase()\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <section class=\"flex justify-center items-center\">\r\n        <h1 class=\"text-3xl md:text-6xl\">Bienvenidos a COVID STATS</h1>\r\n      </section>\r\n      <section class=\"flex justify-center items-center m-5\">\r\n        <section className=\"text-sm \">\r\n          <h2 className=\"sm:text-lg\">Nombre del pais </h2>\r\n        </section>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={onChangeHandler}\r\n          value={country}\r\n          className=\"m-3 px-3 py-3 placeholder-gray-400 text-gray-700 relative bg-white bg-white rounded text-lg shadow  focus:outline-none focus:shadow-outline w-6/12 \"\r\n        />\r\n        <button\r\n          onClick={dataFireBase}\r\n          className=\"cursor-pointer bg-green-600 hover:bg-green-500 shadow-xl px-5 py-2 inline-block text-green-100 hover:text-white rounded\"\r\n        >Buscar</button>\r\n      </section>\r\n      {\r\n        (day2 && day1 && day3) ?\r\n          <div>\r\n            <section class=\"flex justify-center items-center\">\r\n              <h2 class=\"text-3xl md:text-6xl\">Ultimos Datos Obtenidos</h2>\r\n            </section>\r\n\r\n            <CardsSmalld />\r\n\r\n\r\n          </div> :\r\n          (RecoveredFB) ? <CardsSmallshow /> : <p>No hay datos</p>\r\n\r\n      }\r\n\r\n      <section>\r\n        <section class=\"h-screen\">\r\n          <CardPrincipal title=\"Panorama Actual\" dataInfectados={[300]} dataMuertes={[200]} dataRecuperados={[75]} dataActivos={[420]}></CardPrincipal>\r\n        </section>\r\n        <footer class=\"w-full h-20 bg-gray-900 text-white flex items-center justify-center\">\r\n          Desarrollo de Portales Web 2, Grupo 2 &copy; 2021\r\n            </footer>\r\n      </section>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default Covid;\r\n","import {NavLink} from 'react-router-dom';\r\nfunction NavBarItems({label, uri}){\r\n  return (\r\n    <li>\r\n      <NavLink to={uri}>{label}</NavLink>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NavBarItems;\r\n\r\n/* <a alt={label} href={uri} >{label}</a></li> */\r\n","import NavBarItems from \"./NavBarItems\";\r\nimport \"./NavBar.css\";\r\nfunction NavBar() {\r\n  let dummyData = [\r\n    { label: \"Mundo\", uri: \"/\" },\r\n    //si desea más items solo es agregarlos en esta parte\r\n  ];\r\n  let navBarItems = dummyData.map((o, i)=>{\r\n    return (\r\n            <div>\r\n              <ul>\r\n                <NavBarItems \r\n                  label={o.label}\r\n                  uri={o.uri}\r\n                  key={i}>\r\n                </NavBarItems>\r\n                <button style={{backgroundColor :\"#118ab2\",color:\"#fff\",width:\"180%\",paddingLeft:\"5%\",marginRight:\"20px\",paddingRight:\"5%\"}}>Recargar</button>\r\n              </ul>\r\n            </div>\r\n          );\r\n  });\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        {navBarItems}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/logo.713541f9.png\";","//import React, { Component } from 'react';\r\n/*Importamos nuestro componente Image*/\r\n//import Image from '../../../src/Image';\r\nimport logo from '../../assets/logo.png'\r\n\r\nfunction Brand({ title }){\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <img style={{width:\"40px\"}} src={logo} alt=\"Logo de la app\" />\r\n        <h1 style={{color:\"#000\",marginLeft:\"10px\"}}>{title}</h1>\r\n      </ul>\r\n      \r\n    </nav>\r\n    \r\n  );\r\n}\r\n\r\nexport default Brand;\r\n","import NavBar from \"../NavBars/NavBar\";\r\nimport Brand from \"./Brand\";\r\nimport \"./BrandHeader.css\";\r\n\r\n\r\nfunction BrandHeader({ children }){\r\n  return (\r\n    <header>\r\n     \r\n      <Brand  title=\"Covid Stats\"></Brand>\r\n     \r\n      <NavBar></NavBar>\r\n     \r\n    </header>\r\n  );\r\n}\r\n\r\nexport default BrandHeader;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Covid from './components/Covid/Covid'\r\nimport './index.css';\r\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport BrandHeader from './components/BrandHeader/BrandHeader';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <section>\r\n        <BrandHeader></BrandHeader>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n              <Covid />\r\n          </Route>\r\n        </Switch>\r\n      </section>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}