{"version":3,"sources":["logo.svg","components/Graficos/GraficoSecciones.js","components/Cards/CardSmall.js","components/Graficos/GraficoPrincipal.js","components/Cards/CardPrincipal.js","components/Covid/Covid.js","components/NavBars/NavBarItems.js","components/NavBars/NavBar.js","components/BrandHeader/Brand.js","components/BrandHeader/BrandHeader.js","App.js","reportWebVitals.js","index.js"],"names":["GraficoSecciones","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoy","ayer","antier","style","options","maintainAspectRatio","responsive","CardSmall","title","className","GraficoPrincipal","dataInfectados","dataMuertes","dataRecuperados","dataActivos","CardPrincipal","Covid","useState","country","setCountry","day1","setDay1","day2","setDay2","day3","setDay3","getData1","_date","method","url","params","date","name","headers","axios","request","then","response","console","log","catch","error","getData2","getData3","allData","a","setTimeout","useEffect","class","type","onChange","event","target","value","onClick","provinces","confirmed","active","recovered","deaths","NavBarItems","uri","to","NavBar","navBarItems","map","o","i","Brand","BrandHeader","children","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86b07f44.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n//import './template.css';\r\nimport {Bar} from 'react-chartjs-2';\r\n// para usar esta librería se de instalar con el siguiente comando en la raiz del proyecto\r\n \r\n//npm install --save react-chartjs-2 chart.js\r\n\r\nfunction GraficoSecciones ({hoy, ayer, antier}){\r\n  const data={\r\n    //cuantas secciones se usarán, cada valor en los datasets corresponde a cada sección \r\n    labels: [],\r\n    datasets:[{\r\n      //Nombre de la sección\r\n      label:'Hoy',\r\n      //estilos\r\n      backgroundColor: 'blue',\r\n      borderColor:'grey',\r\n      borderWidth:0.5,\r\n      hoverBackgroundColor:'rgba(0,0,1,0.2)',\r\n      hoverBorderColor: '#fff',\r\n      //1 valor por sección ( 'enero 2020','abril 2020','enero 2021','actual' )\r\n      data:hoy\r\n    },{\r\n      label:'Ayer',\r\n      backgroundColor: 'rgba(255,0,0,1)',\r\n      borderColor:'grey',\r\n      borderWidth:0.5,\r\n      hoverBackgroundColor:'#red',\r\n      hoverBorderColor: '#red',\r\n      data:ayer\r\n    },{\r\n      label:'Antier',\r\n      backgroundColor: 'rgba(0,255,0,1)',\r\n      borderColor:'grey',\r\n      borderWidth:0.5,\r\n      hoverBackgroundColor:'rgba(0,0,1,0.2)',\r\n      hoverBorderColor: '#fff',\r\n      data:antier\r\n    }\r\n  ]}\r\n  //opciones para el grafico de barras \r\n  const opciones={\r\n    //abarca toda el espacio necesario a lo alto\r\n    maintainAspectRatio:false,\r\n    //se convierte en un gráfico responsivo\r\n    responsive:true,    \r\n  }\r\n //sección de estilos locales\r\n  const Style={\r\n    //backgroundColor:'#454',\r\n    borderColor:'Red',\r\n  }\r\n  return (\r\n    //div con estilo local, encabezado y muestra de el gráfico de barras\r\n    <div style={Style}>\r\n      \r\n        <Bar data={data} options={opciones} ></Bar>\r\n        \r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default GraficoSecciones;\r\n","import GraficoSecciones from \"../Graficos/GraficoSecciones\";\r\n\r\nfunction CardSmall ({title, hoy, ayer, antier}) {\r\n    return (\r\n        <section className=\"flex justify-center w-11/12 h-80 my-7 md:w-11/12 Cards align-center\">\r\n            <section className=\"flex flex-col items-center justify-center w-full border-2 border-black border-solid rounded-3xl\">\r\n                <div className=\"flex items-center justify-center w-full h-full mt-5 text-white bg-gray-100\">\r\n                    <GraficoSecciones hoy={hoy} ayer={ayer} antier={antier}/>\r\n                </div>\r\n                <h2>{title}</h2>\r\n            </section>\r\n        </section>\r\n      );\r\n}\r\n\r\nexport default CardSmall;","import React from 'react';\r\n//import './template.css';\r\nimport {Bar} from 'react-chartjs-2';\r\n// para usar esta librería se de instalar con el siguiente comando en la raiz del proyecto\r\n \r\n//npm install --save react-chartjs-2 chart.js\r\n\r\nfunction GraficoPrincipal ({dataInfectados, dataMuertes, dataRecuperados, dataActivos}){\r\n  const data={\r\n    //cuantas secciones se usarán, cada valor en los datasets corresponde a cada sección \r\n    labels: [],\r\n    datasets:[{\r\n      //Nombre de la sección\r\n      label:'Infectados',\r\n      //estilos\r\n      backgroundColor: 'blue',\r\n      borderColor:'grey',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(0,0,1,0.2)',\r\n      hoverBorderColor: '#fff',\r\n      //1 valor por sección ( 'enero 2020','abril 2020','enero 2021','actual' )\r\n      data:dataInfectados\r\n    },{\r\n      label:'Muertes',\r\n      backgroundColor: 'rgba(255,0,0,1)',\r\n      borderColor:'grey',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'#red',\r\n      hoverBorderColor: '#red',\r\n      data:dataMuertes\r\n    },{\r\n      label:'Recuperados',\r\n      backgroundColor: 'rgba(0,255,0,1)',\r\n      borderColor:'grey',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(0,0,1,0.2)',\r\n      hoverBorderColor: '#fff',\r\n      data:dataRecuperados\r\n    },{\r\n      label:'Activos',\r\n      backgroundColor: 'yellow',\r\n      borderColor:'grey',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(0,0,1,0.2)',\r\n      hoverBorderColor: '#fff',\r\n      data:dataActivos\r\n    }\r\n  ]\r\n  }\r\n  //opciones para el grafico de barras \r\n  const opciones={\r\n    //abarca toda el espacio necesario a lo alto\r\n    maintainAspectRatio:false,\r\n    //se convierte en un gráfico responsivo\r\n    responsive:true,    \r\n  }\r\n //sección de estilos locales\r\n  const Style={\r\n    //backgroundColor:'#454',\r\n    borderColor:'Red',\r\n  }\r\n  return (\r\n    //div con estilo local, encabezado y muestra de el gráfico de barras\r\n    <div style={Style}>\r\n      \r\n        <Bar data={data} options={opciones} ></Bar>\r\n        \r\n    </div>\r\n    \r\n    \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default GraficoPrincipal;\r\n","import GraficoPrincipal from \"../Graficos/GraficoPrincipal\";\r\n\r\nfunction CardPrincipal ({title, dataInfectados, dataMuertes, dataRecuperados, dataActivos}) {\r\n    return (\r\n        <section className=\"flex justify-center Cards align-center h-4/5\">\r\n            <section className=\"flex flex-col items-center justify-center w-11/12 border-2 border-black border-solid rounded-3xl\">\r\n                <div className=\"flex items-center justify-center w-full h-full mt-5 text-white bg-gray-200\">\r\n                    <GraficoPrincipal dataInfectados={dataInfectados} dataMuertes={dataMuertes} dataRecuperados={dataRecuperados} dataActivos={dataActivos}/>\r\n                </div>\r\n                <h2 className=\"text-lg md:text-2xl\">{title}</h2>\r\n            </section>\r\n        </section>\r\n      );\r\n}\r\n\r\nexport default CardPrincipal;","import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\"\r\nimport CardSmall from \"../Cards/CardSmall\";\r\nimport CardPrincipal from \"./../Cards/CardPrincipal\";\r\n\r\n\r\n\r\nconst Covid=() => {\r\nconst [country, setCountry] = useState('Honduras');\r\nconst [aux, setAux] = useState(null);\r\nconst [day1, setDay1] = useState(null);\r\nconst [day2, setDay2] = useState(null);\r\nconst [day3, setDay3] = useState(null);\r\n\r\n\r\nconst getData1 = (_date) =>{\r\n    const options = {\r\n        method: 'GET',\r\n        url: 'https://covid-19-data.p.rapidapi.com/report/country/name',\r\n        params: {date: \"2020-03-29\", name: country},\r\n        headers: {\r\n          'x-rapidapi-key': '57d8c19e8amshebeee19daa84596p188d46jsna6814a99952c',\r\n          'x-rapidapi-host': 'covid-19-data.p.rapidapi.com'\r\n        }\r\n      };\r\n      \r\n      axios.request(options).then(function (response) {\r\n    //   console.log(response.data[0].provinces[0].confirmed);\r\n     //console.log(response.data);\r\n     setDay1(response.data[0]);\r\n     console.log(\"Promesa aceptada\")\r\n      }).catch(function (error) {\r\n          console.error(error);\r\n          console.log(\"Promesa rechazada\")\r\n      });\r\n}\r\n\r\nconst getData2 = () =>{\r\n\r\n\r\n    const options = {\r\n        method: 'GET',\r\n        url: 'https://covid-19-data.p.rapidapi.com/report/country/name',\r\n        params: {date: \"2020-03-30\", name: country},\r\n        headers: {\r\n          'x-rapidapi-key': '57d8c19e8amshebeee19daa84596p188d46jsna6814a99952c',\r\n          'x-rapidapi-host': 'covid-19-data.p.rapidapi.com'\r\n        }\r\n      };\r\n      \r\n      axios.request(options).then(function (response) {\r\n    //   console.log(response.data[0].provinces[0].confirmed);\r\n     //console.log(response.data);\r\n     setDay2(response.data[0]);\r\n     console.log(\"Promesa aceptada\")\r\n      }).catch(function (error) {\r\n          console.error(error);\r\n          console.log(\"Promesa rechazada\")\r\n      });\r\n}\r\n\r\nconst getData3 = () =>{\r\n    const options = {\r\n        method: 'GET',\r\n        url: 'https://covid-19-data.p.rapidapi.com/report/country/name',\r\n        params: {date: \"2020-03-31\", name: country},\r\n        headers: {\r\n          'x-rapidapi-key': '57d8c19e8amshebeee19daa84596p188d46jsna6814a99952c',\r\n          'x-rapidapi-host': 'covid-19-data.p.rapidapi.com'\r\n        }\r\n      };\r\n      \r\n      axios.request(options).then(function (response) {\r\n    //console.log(response.data[0].provinces[0].confirmed);\r\n     //console.log(response.data);\r\n     setDay3(response.data[0]);\r\n     console.log(\"Promesa aceptada\")\r\n      }).catch(function (error) {\r\n          console.error(error);\r\n          console.log(\"Promesa rechazada\")\r\n      });\r\n}\r\n\r\n\r\n\r\nconst allData = async() =>{\r\n    await setTimeout(function delay (){\r\n        getData1()\r\n    },1000)\r\n  //  setDay1(aux);\r\n   // setAux(null);\r\n    console.log(\"Day 1 es: \");\r\n    console.log(day1);\r\n    await setTimeout(function delay (){\r\n        getData2()\r\n    },3000)\r\n //  setDay2(aux);\r\n  //  setAux(null);\r\n    console.log(\"Day 2 es: \");\r\n    console.log(day2);\r\n    await setTimeout(function delay (){\r\n        getData3()\r\n    },5000)\r\n   // setDay3(aux);\r\n    //setAux(null);\r\n    console.log(\"Day 3 es: \");\r\n    console.log(day3);\r\n    //alert(\"Finalizada\")\r\n}\r\n\r\n\r\nuseEffect(() => {\r\n  //  getData2(\"2020-03-03\")\r\n}, [])\r\n\r\nconst onChangeHandler = event => {\r\n    setCountry(event.target.value);\r\n    console.log(country);\r\n};\r\n/*<p>{day1.country}</p>\r\n                <p>Casos confirmados: {day1.provinces[0].confirmed}</p>\r\n                <p>Recuperados: {day1.provinces[0].recovered}</p>\r\n                <p>Fallecidos: {day1.provinces[0].deaths}</p>\r\n                <p>Activos: {day1.provinces[0].active}</p>\r\n\r\n                <br/>\r\n                <p>Casos confirmados: {day2.provinces[0].confirmed}</p>\r\n                <p>Recuperados: {day2.provinces[0].recovered}</p>\r\n                <p>Fallecidos:{day2.provinces[0].deaths}</p>\r\n                <p>Activos: {day2.provinces[0].active}</p>\r\n                <br/>\r\n                <p>Casos confirmados: {day3.provinces[0].confirmed}</p>\r\n                <p>Recuperados: {day3.provinces[0].recovered}</p>\r\n                <p>Fallecidos:{day3.provinces[0].deaths}</p>\r\n                <p>Activos: {day3.provinces[0].active}</p> */\r\n\r\n    return (\r\n        <div>\r\n            <section class=\"flex justify-center items-center\">\r\n              <h1 class=\"text-3xl md:text-6xl\">Bienvenidos a COVID STATS</h1>\r\n            </section>\r\n            <section class=\"flex justify-center items-center m-5\">\r\n            <section className=\"text-sm \">\r\n              <h2 className=\"sm:text-lg\">Nombre del pais </h2>\r\n            </section>\r\n              <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={onChangeHandler}\r\n              value={country}\r\n              className=\"m-3 px-3 py-3 placeholder-gray-400 text-gray-700 relative bg-white bg-white rounded text-lg shadow  focus:outline-none focus:shadow-outline w-6/12 \"\r\n              />\r\n              <button\r\n              onClick={allData}\r\n              className=\"cursor-pointer bg-green-600 hover:bg-green-500 shadow-xl px-5 py-2 inline-block text-green-100 hover:text-white rounded\"\r\n              >Buscar</button>\r\n            </section>\r\n            {\r\n                day2&&day1&&day3?\r\n                <div>\r\n                  <section class=\"flex justify-center items-center\">\r\n                    <h2 class=\"text-3xl md:text-6xl\">Ultimos Datos Obtenidos</h2>\r\n                  </section>\r\n\r\n                  <section class=\"grid grid-cols-1 md:grid-cols-2 align-center justify-center\">\r\n                      <div class=\"flex justify-center items-center\">\r\n                    <CardSmall title=\"Confirmados\" class=\"col-span-1 m-auto\" hoy={[day3.provinces[0].confirmed]} ayer={[day2.provinces[0].confirmed]} antier={[day1.provinces[0].confirmed]}></CardSmall>\r\n                      </div>\r\n                    <div class=\"flex justify-center items-center\">\r\n                      <CardSmall title=\"Activos\" class=\"col-span-1 m-auto\" hoy={[day3.provinces[0].active]} ayer={[day2.provinces[0].active]} antier={[day1.provinces[0].active]}></CardSmall>\r\n                    </div>\r\n                    <div class=\"flex justify-center items-center\">\r\n                      <CardSmall title=\"Recuperados\" class=\"col-span-1 m-auto\" hoy={[day3.provinces[0].recovered]} ayer={[day2.provinces[0].recovered]} antier={[day1.provinces[0].recovered]}></CardSmall>\r\n                    </div>\r\n                    <div class=\"flex justify-center items-center\">\r\n                      <CardSmall title=\"Muertos\" class=\"col-span-1 m-auto\" hoy={[day3.provinces[0].deaths]} ayer={[day2.provinces[0].deaths]} antier={[day1.provinces[0].deaths]}></CardSmall>\r\n                    </div>\r\n                    </section>\r\n                  </div>:\r\n                  <p>No hay datos para esta fecha</p>\r\n\r\n                \r\n            }\r\n\r\n        <section>\r\n            <section class=\"h-screen\">\r\n              <CardPrincipal title=\"Panorama Actual\" dataInfectados={[300]} dataMuertes={[200]} dataRecuperados={[75]} dataActivos={[420]}></CardPrincipal>\r\n            </section>\r\n            <footer class=\"w-full h-20 bg-gray-900 text-white flex items-center justify-center\">\r\n            Desarrollo de Portales Web 2, Grupo 2 &copy; 2021\r\n            </footer>\r\n        </section>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Covid;\r\n","import {NavLink} from 'react-router-dom';\r\nfunction NavBarItems({label, uri}){\r\n  return (\r\n    <li>\r\n      <NavLink to={uri}>{label}</NavLink>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NavBarItems;\r\n\r\n/* <a alt={label} href={uri} >{label}</a></li> */\r\n","import NavBarItems from \"./NavBarItems\";\r\nimport \"./NavBar.css\";\r\nfunction NavBar() {\r\n  let dummyData = [\r\n    { label: \"Home\", uri: \"/\" },\r\n    { label: \"Todo's\", uri: \"/todos\" },\r\n    { label: \"Login\", uri: \"/login\" },\r\n  ];\r\n  let navBarItems = dummyData.map((o, i)=>{\r\n    return (\r\n            <NavBarItems\r\n              label={o.label}\r\n              uri={o.uri}\r\n              key={i}>\r\n            </NavBarItems>\r\n          );\r\n  });\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        {navBarItems}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","function Brand({ title }){\r\n  return (\r\n    <h1>{title}</h1>\r\n  );\r\n}\r\n\r\nexport default Brand;\r\n","import NavBar from \"../NavBars/NavBar\";\r\nimport Brand from \"./Brand\";\r\nimport \"./BrandHeader.css\";\r\nfunction BrandHeader({ children }){\r\n  return (\r\n    <header>\r\n      <Brand title=\"Mi App con react.\"></Brand>\r\n      <NavBar></NavBar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default BrandHeader;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Covid from './components/Covid/Covid'\r\nimport './index.css';\r\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport BrandHeader from './components/BrandHeader/BrandHeader';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <section>\r\n        <BrandHeader></BrandHeader>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n              <Covid />\r\n          </Route>\r\n        </Switch>\r\n      </section>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}